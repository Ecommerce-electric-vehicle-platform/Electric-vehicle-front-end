"use client"

// üîπ 1. Import th√™m useEffect (n·∫øu ch∆∞a c√≥) v√† useLocation
import { useState, useEffect, useCallback } from "react"; // Gi·ªØ useCallback n·∫øu b·∫°n ƒëang debug
import { useLocation } from "react-router-dom"; // Th√™m useLocation
import UserSidebar from "./UserSidebar";
import PersonalProfileForm from "./PersonalProfileForm";
import "./PersonalProfilePage.css";
import ChangePassword from "./ChangePassword";
import UpgradeToSeller from "./UpgradeToSeller";
import PersonalEWallet from "./PersonalEWallet";
import SellerBuyPackage from "./SellerBuyPackage"; // ƒê·∫£m b·∫£o import ƒë√∫ng

export default function PersonalProfilePage() {
  const location = useLocation()
  const [activeSection, setActiveSection] = useState("H·ªì s∆° c√° nh√¢n")
  const [avatarFile, setAvatarFile] = useState(null)
  const [username, setUsername] = useState("")
  //const [userId, setUserId] = useState(null)

  // H√†m wrapper ƒë·ªÉ log (t√πy ch·ªçn, gi·ªØ l·∫°i ƒë·ªÉ debug)
  const setActiveSection = useCallback((newSection) => {
    console.log(`>>> setActiveSection called with: "${newSection}"`);
    _setActiveSection(newSection);
  }, []); // Dependency r·ªóng cho useCallback l√† OK

  console.log("PersonalProfilePage rendering with activeSection:", activeSection);

  // useEffect l·∫•y username (gi·ªØ nguy√™n)
  useEffect(() => {
    const storedUsername = localStorage.getItem("username");
    if (storedUsername) setUsername(storedUsername);
    // Kh√¥ng c·∫ßn cleanup listener ·ªü ƒë√¢y v√¨ kh√¥ng add listener n√†o
  }, []); // Dependency r·ªóng OK v√¨ ch·ªâ ƒë·ªçc localStorage 1 l·∫ßn

    if (tab === "wallet" || tab === "e-wallet" || tab === "ewallet") {
      setActiveSection("V√≠ ƒëi·ªán t·ª≠")
    } else if (tab === "profile") {
      setActiveSection("H·ªì s∆° c√° nh√¢n")
    } else if (tab === "password") {
      setActiveSection("ƒê·ªïi m·∫≠t kh·∫©u")
    } else if (tab === "orders" || tab === "order") {
      setActiveSection("ƒê∆°n h√†ng c·ªßa t√¥i")
    } else if (tab === "upgrade") {
      setActiveSection("N√¢ng c·∫•p th√†nh ng∆∞·ªùi b√°n")
    }
  }, [location.search])

  // H√†m x·ª≠ l√Ω avatar (c√≥ th·ªÉ kh√¥ng c·∫ßn n·ªØa)
  // const handleAvatarChange = (file) => {
  //   setAvatarFile(file);
  // };

  //  X·ª≠ l√Ω click sidebar v·ªõi scroll smooth
  const handleSidebarClick = (section) => {
    setActiveSection(section)

    // Scroll smooth ƒë·∫øn v·ªã tr√≠ hi·ªÉn th·ªã khung b√™n ph·∫£i
    setTimeout(() => {
      const profileContainer = document.querySelector('.profile-container')
      if (profileContainer) {
        profileContainer.scrollIntoView({
          behavior: 'smooth',
          block: 'start',
          inline: 'nearest'
        })
      }
    }, 100) // Delay nh·ªè ƒë·ªÉ ƒë·∫£m b·∫£o state ƒë√£ update
  }

  return (
    <div className="profile-page">
      <div className="profile-container">
        <UserSidebar
          activeItem={activeSection}
          onItemClick={handleSidebarClick}
          onAvatarChange={handleAvatarChange}
          username={username}
        />

        <main className="profile-main">
          {activeSection === "H·ªì s∆° c√° nh√¢n" && (
            <PersonalProfileForm avatarFile={avatarFile} />
          )}

          {activeSection === "ƒê·ªïi m·∫≠t kh·∫©u" && <ChangePassword />}
          {activeSection === "ƒê∆°n h√†ng c·ªßa t√¥i" && (
            <div>N·ªôi dung ƒë∆°n h√†ng s·∫Ω s·ªõm c√≥...</div>
          )}
          {activeSection === "V√≠ ƒëi·ªán t·ª≠" && <PersonalEWallet />}
          {activeSection === "N√¢ng c·∫•p th√†nh ng∆∞·ªùi b√°n" && <UpgradeToSeller />}
        </main>
      </div>
    </div>
  );
}
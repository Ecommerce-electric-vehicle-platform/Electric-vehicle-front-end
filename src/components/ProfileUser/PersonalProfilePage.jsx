

// üîπ 1. Import th√™m useEffect (n·∫øu ch∆∞a c√≥) v√† useLocation
import { useState, useEffect, useCallback } from "react"; // Gi·ªØ useCallback n·∫øu b·∫°n ƒëang debug
import { useLocation } from "react-router-dom"; // Th√™m useLocation
import UserSidebar from "./UserSidebar";
import PersonalProfileForm from "./PersonalProfileForm";
import "./PersonalProfilePage.css";
import ChangePassword from "./ChangePassword";
import UpgradeToSeller from "./UpgradeToSeller";
import PersonalEWallet from "./PersonalEWallet";
import SellerBuyPackage from "./SellerBuyPackage"; // ƒê·∫£m b·∫£o import ƒë√∫ng

export default function PersonalProfilePage() {
  // Kh·ªüi t·∫°o state v·∫´n l√† "Personal profile"
  const [activeSection, _setActiveSection] = useState("Personal profile");
  // const [avatarFile, setAvatarFile] = useState(null); // C√≥ th·ªÉ kh√¥ng c·∫ßn n·ªØa
  const [username, setUsername] = useState("");
  const location = useLocation(); // L·∫•y th√¥ng tin ƒë∆∞·ªùng d·∫´n

  // H√†m wrapper ƒë·ªÉ log (t√πy ch·ªçn, gi·ªØ l·∫°i ƒë·ªÉ debug)
  const setActiveSection = useCallback((newSection) => {
    console.log(`>>> setActiveSection called with: "${newSection}"`);
    _setActiveSection(newSection);
  }, []); // Dependency r·ªóng cho useCallback l√† OK

  console.log("PersonalProfilePage rendering with activeSection:", activeSection);

  // useEffect l·∫•y username (gi·ªØ nguy√™n)
  useEffect(() => {
    const storedUsername = localStorage.getItem("username");
    if (storedUsername) setUsername(storedUsername);
    // Kh√¥ng c·∫ßn cleanup listener ·ªü ƒë√¢y v√¨ kh√¥ng add listener n√†o
  }, []); // Dependency r·ªóng OK v√¨ ch·ªâ ƒë·ªçc localStorage 1 l·∫ßn

  // üîπ 2. TH√äM useEffect N√ÄY ƒê·ªÇ √âP SECTION KHI V√ÄO TRANG `/profile` üîπ
  useEffect(() => {
    // Khi component n√†y ƒë∆∞·ª£c mount HO·∫∂C ƒë∆∞·ªùng d·∫´n thay ƒë·ªïi ƒê·∫æN trang n√†y,
    // lu√¥n ƒë·∫∑t l·∫°i activeSection v·ªÅ gi√° tr·ªã m·∫∑c ƒë·ªãnh.
    console.log("Forcing activeSection to 'Personal profile' due to mount or location change.");
    // S·ª≠ d·ª•ng _setActiveSection tr·ª±c ti·∫øp ƒë·ªÉ tr√°nh v√≤ng l·∫∑p n·∫øu d√πng wrapper setActiveSection trong dependency
    _setActiveSection("Personal profile");
    // üîπ Ch·∫°y l·∫°i effect n√†y n·∫øu ƒë∆∞·ªùng d·∫´n pathname thay ƒë·ªïi (ƒë·ªÉ reset khi quay l·∫°i)
  }, [location.pathname]);
  // ---------------------------------------------------

  // H√†m x·ª≠ l√Ω avatar (c√≥ th·ªÉ kh√¥ng c·∫ßn n·ªØa)
  // const handleAvatarChange = (file) => {
  //   setAvatarFile(file);
  // };

  return (
    <div className="profile-page">
      <UserSidebar
        activeItem={activeSection}
        onItemClick={setActiveSection} // D√πng h√†m wrapper ho·∫∑c _setActiveSection tr·ª±c ti·∫øp
        // onAvatarChange={handleAvatarChange} // B·ªè d√≤ng n√†y n·∫øu kh√¥ng d√πng avatarFile
        username={username}
      />

      <main className="profile-main">
        {/* Logic render gi·ªØ nguy√™n, gi·ªù n√≥ s·∫Ω lu√¥n th·∫•y "Personal profile" khi m·ªõi v√†o */}
        {activeSection === "Personal profile" && (
          <PersonalProfileForm /* avatarFile={avatarFile} - B·ªè prop n√†y n·∫øu kh√¥ng d√πng */ />
        )}
        {activeSection === "Change password" && <ChangePassword />}
        {activeSection === "My order" && (
          <div>My order content coming soon...</div>
        )}
        {activeSection === "Personal E-wallet" && <PersonalEWallet />}
        {/* {activeSection === "Upgrade to Seller" && <UpgradeToSeller />} */}
        {activeSection === "Upgrade to Seller" && (
          <UpgradeToSeller onGoToProfile={() => setActiveSection("Personal profile")} />
        )}
        {activeSection === "Seller business package" && <SellerBuyPackage />}
      </main>
    </div>
  );
}